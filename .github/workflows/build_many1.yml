name: BuildAndTest

on:
  workflow_dispatch:

env:
  QT_VERSION: 5.15.2

jobs:
  build_pymeshlab:
    name: Build PyMeshLab
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup env variables
      id: envs
      shell: bash
      run: |
        echo "arch=x86_64" >> $GITHUB_OUTPUT
        echo "build_options=--nightly --ccache" >> $GITHUB_OUTPUT
        echo "deploy_options=" >> $GITHUB_OUTPUT
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        cache: true
        version: ${{ env.QT_VERSION }}
    - name: Install dependencies
      shell: bash
      run: |
        sh scripts/Linux/0_setup_env.sh
    - name: Cache external libraries sources
      id: cache-ext-libs
      uses: actions/cache@v4
      with:
        path: src/meshlab/src/external/downloads/*
        key: Linux-external-libraries
    - name: Ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: Linux-${{ github.ref }}
    - name: Build PyMeshLab
      run: |
        sh scripts/Linux/1_build.sh ${{ steps.envs.outputs.build_options }}
    - name: Deploy PyMeshLab
      run: |
        sh scripts/Linux/2_deploy.sh ${{ steps.envs.outputs.deploy_options }}
    - name: Upload PyMeshLab_Linux_x86_64_python3.10
      uses: actions/upload-artifact@v4
      with:
        name: PyMeshLab_Linux_x86_64_python3.10
        path: pymeshlab

  build_manylinux_wheel:
    name: Build manylinux2014 Wheel
    runs-on: ubuntu-latest
    needs: build_pymeshlab
    container: quay.io/pypa/manylinux2014_x86_64
    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true # 添加到这里
    steps:
    - name: Replace node20 with node16 (Local Test Only!)
      if: runner.os == 'Linux'  # 仅在 Linux runner 上运行
      shell: bash
      run: |
        # 假设 RUNNER_HOME 环境变量已经设置，或者替换为实际路径
        # 如果没有，需要先 export RUNNER_HOME=/path/to/runner
        echo "Overriding node20 with node16 - USE WITH CAUTION!"
        sudo -E bash -c "cd $RUNNER_HOME/actions-runner/externals && \
          mv node20 node20.bak && \
          ln -s node16 node20"
    - uses: actions/checkout@v3
    - name: Download PyMeshLab_Linux_x86_64_python3.10
      uses: actions/download-artifact@v4
      with:
        name: PyMeshLab_Linux_x86_64_python3.10
        path: pymeshlab/
    - name: Setup Python 3.10
      run: |
        # Use Python 3.10 from manylinux2014 container
        export PATH="/opt/python/cp310-cp310/bin:$PATH"
        alias python="/opt/python/cp310-cp310/bin/python"
        alias pip="/opt/python/cp310-cp310/bin/pip"
    - name: Build manylinux2014 Wheel
      shell: bash
      run: |
        # Set up Python 3.10
        export PATH="/opt/python/cp310-cp310/bin:$PATH"
        
        # Create version file
        VER=$(date +%Y.%m.%d)
        echo "${VER}.dev0" | tr -d '\n'> PYML_VERSION
        
        # Build wheel
        /opt/python/cp310-cp310/bin/pip install wheel
        /opt/python/cp310-cp310/bin/pip wheel . -w wheels/
        
        # Use auditwheel to make the wheel manylinux2014 compatible
        /opt/python/cp310-cp310/bin/pip install auditwheel
        /opt/python/cp310-cp310/bin/auditwheel repair wheels/pymeshlab*.whl -w manylinux_wheels/
    - name: Upload manylinux2014_x86_64_python3.10 wheel
      uses: actions/upload-artifact@v4
      with:
        name: pymeshlab_whl_manylinux2014_x86_64_python3.10
        path: manylinux_wheels/pymeshlab*.whl

  test_manylinux_wheel:
    name: Test manylinux2014 Wheel
    runs-on: ubuntu-latest
    needs: build_manylinux_wheel
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
    - name: Download pymeshlab_whl_manylinux2014_x86_64_python3.10
      uses: actions/download-artifact@v4
      with:
        name: pymeshlab_whl_manylinux2014_x86_64_python3.10
        path: .
    - name: Install wheel and dependencies
      shell: bash
      run: |
        # Set up Python 3.10
        export PATH="/opt/python/cp310-cp310/bin:$PATH"
        
        # Install dependencies & wheel
        /opt/python/cp310-cp310/bin/pip install pytest numpy
        /opt/python/cp310-cp310/bin/pip install pymeshlab*.whl
        
        # Install required system libraries
        yum install -y mesa-libGL
    - name: Run tests
      run: |
        export PATH="/opt/python/cp310-cp310/bin:$PATH"
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/python/cp310-cp310/lib
        /opt/python/cp310-cp310/bin/pytest --pyargs pymeshlab -m "not glcontext"
